usage: pw.py [-h] [--version] [--toml TOML] [--install-dir INSTALL_DIR]
             [--force-install] [--clean] [--install-context tool-context]
             [--verbose] [--quiet] [--info]
             [--add [context:]<package>,<package>...] [--lock] [--install-px]
             [--upgrade]
             ...

Execute commands or aliases defined in the [tool.pyprojectx] section of
pyproject.toml. Use the -i or --info option to see available tools and
aliases.

positional arguments:
  command               The command/alias with optional arguments to execute.

options:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --toml TOML, -t TOML  The toml config file. Defaults to 'pyproject.toml' in
                        the same directory as the pw script.
  --install-dir INSTALL_DIR
                        The directory where all tools (including pyprojectx)
                        are installed; defaults to the PYPROJECTX_INSTALL_DIR
                        environment value if set, else '.pyprojectx' in the
                        same directory as the invoked pw script.
  --force-install, -f   Force clean installation of the virtual environment
                        used to run cmd, if any.
  --clean, -c           Clean .pyprojectx directory by removing all but the
                        current versions of pyprojectx and context virtual
                        environments.
  --install-context tool-context
                        Install a tool context without actually running any
                        command.
  --verbose, -v         Give more output. This option is additive and can be
                        used up to 2 times.
  --quiet, -q           Suppress output.
  --info, -i            Show the configuration details of a command instead of
                        running it. If no command is specified, a list with
                        all available tools and aliases is shown.
  --add [context:]<package>,<package>...
                        Add one or more packages to a tool context. If no
                        context is specified, the packages are added to the
                        main context. Packages can be specified as in 'pip
                        install', except that a ',' can't be used in the
                        version specification.
  --lock                Write all dependencies of all tool contexts to
                        'pw.lock' to guarantee reproducible outcomes.
  --install-px          Install the px and pxg scripts in your home directory.
  --upgrade             Print instructions to download the latest pyprojectx
                        wrapper scripts.
